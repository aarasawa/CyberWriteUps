import base64

def ensure_base64_padding(cookie_str):
    # Check if the length is a multiple of 4
    if len(cookie_str) % 4 != 0:
        # Calculate the required padding length
        padding_length = 4 - (len(cookie_str) % 4)
        # Add padding characters ('=')
        padded_cookie_str = cookie_str + '=' * padding_length
        return padded_cookie_str
    else:
        return cookie_str

# Example usage
cookie_str = '.eJw1jUkKwzAUQ-_idReJE0-9TLDjb5rJDh4IpfTuVSndCPSEpBebl_pkd1Z8WNmNzSWHqaaNIpjovOtEkFJzbcg4pQYltYNVs-8JsRzUKAi90PZ9ivYg1Cy2rC8BONUTwHDV9wL2tKVcKfvf37ZCvvSRIk2xHY4yEj6MRkOQtEL5P-qPJbL3B0R2NXg.ZflE4A.XMUALHqSSB8c9HLETLXULJ6CbaA'

# Ensure correct padding
padded_cookie_str = ensure_base64_padding(cookie_str)

print("Padded Cookie String:", padded_cookie_str)

# Now you can safely decode the padded cookie string
decoded_cookie = base64.b64decode(padded_cookie_str)
print("Decoded Cookie:", decoded_cookie)